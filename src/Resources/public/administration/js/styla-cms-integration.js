!function(e){var n={};function t(a){if(n[a])return n[a].exports;var i=n[a]={i:a,l:!1,exports:{}};return e[a].call(i.exports,i,i.exports,t),i.l=!0,i.exports}t.m=e,t.c=n,t.d=function(e,n,a){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:a})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(t.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var i in e)t.d(a,i,function(n){return e[n]}.bind(null,i));return a},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p=(window.__sw__.assetPath + '/bundles/stylacmsintegration/'),t(t.s="96jx")}({"+RN2":function(e,n,t){var a={"./icons-styla-plugin-settings.svg":"Zk0C"};function i(e){var n=s(e);return t(n)}function s(e){if(!t.o(a,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return a[e]}i.keys=function(){return Object.keys(a)},i.resolve=s,e.exports=i,i.id="+RN2"},"/h9Y":function(e,n,t){var a=t("TsUz");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,t("P8hj").default)("0098480b",a,!0,{})},"/lk6":function(e,n,t){var a=t("PKhk");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,t("P8hj").default)("93d09b48",a,!0,{})},"9/SF":function(e,n,t){},"96jx":function(e,n,t){"use strict";t.r(n);Shopware.Component.register("cms-block-styla-module-content",{template:'<div class="cms-block-styla-module-content">\n    <slot name="content">\n    </slot>\n</div>\n'});t("/lk6");Shopware.Component.register("cms-block-styla-module-content-preview",{template:'<div>\n    <img class="cms-block-styla-module-content-preview-image" :src="\'stylacmsintegrationplugin/administration/static/img/shopware-6-styla-module.png\' | asset"/>\n</div>\n'}),Shopware.Service("cmsService").registerCmsBlock({name:"styla-module-content",category:"text",label:"styla-cms-integration-plugin.blocks.module-content.label",component:"cms-block-styla-module-content",previewComponent:"cms-block-styla-module-content-preview",defaultConfig:{},slots:{content:{type:"styla-module-content"}}});t("rhw7");var a=Shopware,i=a.Component,s=a.Mixin;i.register("cms-element-styla-module-content",{template:"<div class=\"cms-element-styla-module-content\">\n    <h2>\n        {{ $tc('styla-cms-integration-plugin.element.module-content.text', 0, {'id': element.config.slotId.value}) }}\n    </h2>\n</div>\n",mixins:[s.getByName("cms-element")],created:function(){this.createdComponent()},methods:{createdComponent:function(){this.initElementConfig("styla-module-content")}}});var o=Shopware,r=o.Component,l=o.Mixin;r.register("cms-element-styla-module-content-config",{template:'<sw-field v-model="element.config.slotId.value"\n          :label="$tc(\'styla-cms-integration-plugin.element.module-content.configuration.slot-id.label\')">\n</sw-field>\n',mixins:[l.getByName("cms-element")],created:function(){this.createdComponent()},methods:{createdComponent:function(){this.initElementConfig("styla-module-content")}}});t("/h9Y");Shopware.Component.register("cms-element-styla-module-content-preview",{template:'<div class="cms-element-styla-module-content-preview">\n    <img class="cms-element-styla-module-content-preview-image" :src="\'stylacmsintegrationplugin/administration/static/img/shopware-6-styla-module.png\' | asset"/>\n</div>\n'}),Shopware.Service("cmsService").registerCmsElement({name:"styla-module-content",label:"styla-cms-integration-plugin.element.module-content.label",component:"cms-element-styla-module-content",configComponent:"cms-element-styla-module-content-config",previewComponent:"cms-element-styla-module-content-preview",defaultConfig:{slotId:{source:"static",value:"",required:!0}}});t("Ul5W");var c=Shopware,u=c.Component,d=c.Defaults,g=Shopware.Data.Criteria;u.register("styla-cms-integration-settings",{template:'{% block styla_cmsintegration %}\n    <sw-page class="styla-cmsintegration-settings">\n        {% block styla_cmsintegration_header %}\n            <template #smart-bar-header>\n                <h2>\n                    {{ $tc(\'sw-settings.index.title\') }}\n                    <sw-icon name="solid-long-arrow-right" small></sw-icon>\n                    {{ $tc(\'styla-cms-integration-plugin.configuration.header\') }}\n                </h2>\n            </template>\n        {% endblock %}\n        {% block styla_cmsintegration_actions %}\n            <template #smart-bar-actions>\n                {% block styla_cmsintegration_actions_save %}\n                    <sw-button-process v-model="isSaveSuccessful"\n                                       class="sw-settings-login-registration__save-action"\n                                       variant="primary"\n                                       :isLoading="isLoading"\n                                       :disabled="isLoading"\n                                       @click="onSave">\n                        {{ $tc(\'global.default.save\') }}\n                    </sw-button-process>\n                {% endblock %}\n            </template>\n        {% endblock %}\n        {% block styla_cmsintegration_content %}\n            <template #content>\n                {% block styla_cmsintegration_content_card %}\n                    <sw-card-view>\n                        {% block styla_cmsintegration_content_card_channel_config %}\n                            <sw-sales-channel-config v-model="config"\n                                                     ref="configComponent"\n                                                     domain="StylaCmsIntegration.settings">\n                                {% block styla_cmsintegration_content_card_channel_config_sales_channel %}\n                                    <template #select="{ onInput, selectedSalesChannelId }">\n                                        {% block styla_cmsintegration_content_card_channel_config_sales_channel_card %}\n                                            <sw-card class="sw-card--grid"\n                                                     :title="$tc(\'global.entities.sales_channel\', 2)">\n                                                <div class="card-container">\n                                                    {% block styla_cmsintegration_content_card_channel_config_sales_channel_card_title %}\n                                                        <sw-single-select v-model="selectedSalesChannelId"\n                                                                          labelProperty="translated.name"\n                                                                          valueProperty="id"\n                                                                          :isLoading="isLoading"\n                                                                          :options="salesChannels"\n                                                                          @change="onInput">\n                                                        </sw-single-select>\n                                                    {% endblock %}\n                                                </div>\n                                            </sw-card>\n                                        {% endblock %}\n                                    </template>\n                                {% endblock %}\n                                {% block styla_cmsintegration_content_card_channel_config_cards %}\n                                    <template #content="{ actualConfigData, allConfigs, selectedSalesChannelId }">\n                                        <div v-if="actualConfigData">\n                                            {% block styla_cmsintegration_content_card_channel_config_accounts %}\n                                                <styla-cms-integration-settings-accounts\n                                                    :actualConfigData="actualConfigData"\n                                                    :allConfigs="allConfigs"\n                                                    :selectedSalesChannelId="selectedSalesChannelId"\n                                                    :defaultAccountNameErrorState="defaultAccountNameErrorState"\n                                                    :defaultAccountNameFilled="defaultAccountNameFilled"\n                                                    :salesChannelDomains="salesChannelDomains"\n                                                >\n                                                </styla-cms-integration-settings-accounts>\n                                            {% endblock %}\n                                            {% block styla_cmsintegration_content_card_channel_config_general %}\n                                                <styla-cms-integration-settings-general\n                                                    :actualConfigData="actualConfigData"\n                                                    :allConfigs="allConfigs"\n                                                    :selectedSalesChannelId="selectedSalesChannelId">\n                                                </styla-cms-integration-settings-general>\n                                            {% endblock %}\n                                        </div>\n                                    </template>\n                                {% endblock %}\n                            </sw-sales-channel-config>\n                        {% endblock %}\n                        {% block styla_cmsintegration_content_card_loading %}\n                            <sw-loader v-if="isLoading"></sw-loader>\n                        {% endblock %}\n                    </sw-card-view>\n                {% endblock %}\n            </template>\n        {% endblock %}\n    </sw-page>\n{% endblock %}\n',inject:["repositoryFactory"],data:function(){return{isLoading:!1,isSaveSuccessful:!1,defaultAccountNameFilled:!1,messageAccountBlankErrorState:null,config:null,salesChannels:[],salesChannelDomains:[]}},metaInfo:function(){return{title:this.$createTitle()}},created:function(){this.createdComponent()},computed:{salesChannelRepository:function(){return this.repositoryFactory.create("sales_channel")},salesChannelDomainsRepository:function(){return this.repositoryFactory.create("sales_channel_domain")},defaultAccountNameErrorState:function(){return this.defaultAccountNameFilled?null:this.messageAccountBlankErrorState},hasError:function(){return!this.defaultAccountNameFilled}},watch:{config:{handler:function(){var e=this.$refs.configComponent.allConfigs.null,n=this.$refs.configComponent.selectedSalesChannelId;this.defaultAccountNameFilled=null===n?!!this.config["StylaCmsIntegration.settings.defaultAccountName"]:!!this.config["StylaCmsIntegration.settings.defaultAccountName"]||!!e["StylaCmsIntegration.settings.defaultAccountName"]},deep:!0}},methods:{createdComponent:function(){var e=this;this.isLoading=!0;var n=0,t=new g;t.addFilter(g.equalsAny("typeId",[d.storefrontSalesChannelTypeId,d.apiSalesChannelTypeId])),this.salesChannelRepository.search(t,Shopware.Context.api).then((function(n){n.add({id:null,translated:{name:e.$tc("sw-sales-channel-switch.labelDefaultOption")}}),e.salesChannels=n})).finally((function(){++n>1&&(e.isLoading=!1)}));var a=new g;this.salesChannelDomainsRepository.search(a,Shopware.Context.api).then((function(n){e.salesChannelDomains.push({label:e.$tc("styla-cms-integration-plugin.configuration.field.domainUrls.no_override"),value:""});for(var t=0;t<n.length;t++){var a;null!=n&&null!==(a=n[t])&&void 0!==a&&a.url&&e.isValidUrl(n[t].url)&&e.salesChannelDomains.push({label:n[t].url,value:n[t].url})}})).finally((function(){++n>1&&(e.isLoading=!1)})),this.messageAccountBlankErrorState={code:1,detail:this.$tc("styla-cms-integration-plugin.configuration.field.accountNames.default.error.empty")}},onSave:function(){this.hasError||this.save()},save:function(){var e=this;this.isLoading=!0,this.$refs.configComponent.save().then((function(){e.isSaveSuccessful=!0})).finally((function(){e.isLoading=!1}))},isValidUrl:function(e){if(e)try{return new URL(e),!0}catch(e){return!1}}}});t("dhj1");var p=Shopware,h=p.Component,m=p.Mixin,f=Shopware.Data.Criteria,y=Shopware.Utils.format.date;h.register("styla-cms-integration-page-listing",{template:'{% block styla_pages_listing %}\n    <sw-page class="overdose-contact-list">\n        <template #smart-bar-actions> {# slots check vue.js documentation #}\n            <div v-if="lastSuccessSynchronizationDate">\n                <sw-label id="last-sync-info" variant="info" :dismissable="false">\n                    {{ $tc(\'styla-cms-integration-plugin.actions.get-last-success-date.text\', 0, {\'dateTime\': lastSuccessSynchronizationDate}) }}\n                    <sw-button-process id="reset-sync-button" variant="ghost" size="x-small"\n                        style="padding:0 5px;line-height:12px;font-size:8px;"\n                        :isLoading="resetSynchronizationProcessing"\n                        :processSuccess="resetSynchronizationSuccess"\n                        @process-finish="resetTheResetSynchronizationState"\n                        @click="resetSynchronizationStatus"\n                    >\n                        {{ $tc(\'styla-cms-integration-plugin.actions.reset-synchronization.button.label\') }}\n                    </sw-button-process>\n                </sw-label>\n            </div>\n\n            <sw-button-group\n                :split-button="true"\n            >\n                \n                {% block styla_page_actions_sync %}\n                <sw-button-process\n                    :disabled="scheduleSynchronizationProcessing"\n                    @process-finish="resetScheduleSynchronizationState"\n                    @click="scheduleSynchronization"\n                    :isLoading="scheduleSynchronizationProcessing"\n                    variant="primary"\n                >\n                    {{ $tc(\'styla-cms-integration-plugin.actions.schedule-pages-synchronization.button.label\') }}\n                </sw-button-process>\n                {% endblock %}\n\n                \n                {% block styla_page_actions_sync_context_menu %}\n                <sw-context-button>\n                    <template #button>\n                        <sw-button\n                            square\n                            variant="primary"\n                            :isLoading="synchronizationProcessing"\n                            :disabled="synchronizationProcessing"\n                        >\n                            <sw-icon\n                                name="regular-chevron-down-xs"\n                                size="16"\n                            />\n                        </sw-button>\n                    </template>\n\n                    \n                    {% block styla_page_actions_save_context_menu_actions %}\n                        \n                        {% block styla_page_actions_duplicate %}\n                        <sw-context-menu-item\n                            :disabled="synchronizationProcessing"\n                            @process-finish="resetSynchronizationState"\n                            @click="synchronization"\n                        >\n                            {{ $tc(\'styla-cms-integration-plugin.actions.pages-synchronization.button.label\') }}\n                        </sw-context-menu-item>\n                        {% endblock %}\n                    {% endblock %}\n                </sw-context-button>\n                {% endblock %}\n            </sw-button-group>\n        </template>\n        <template #content>\n            <sw-entity-listing\n                v-if="pages"\n                :items="pages"\n                :repository="repository"\n                :showSelection="false"\n                :allowColumnEdit="false"\n                :allowDelete="false"\n                :allowEdit="false"\n                :columns="columns">\n                <template #actions="{ item }">\n                    <sw-context-menu-item @click="refreshPageDetails(item)">\n                        {{ $tc(\'styla-cms-integration-plugin.actions.refresh-page-details.button.label\') }}\n                    </sw-context-menu-item>\n                </template>\n\n                <template v-slot:column-path="{item, column, url}">\n                    <a v-bind:href="computePathLink(item)" v-if="computePathLink(item)" target="_blank"> {{ computePathLink(item) }} </a>\n                    <span v-else>{{ item.path }}</span>\n                </template>\n            </sw-entity-listing>\n        </template>\n    </sw-page>\n{% endblock %}\n',inject:["repositoryFactory","stylaPageApiService","stylaSynchronizationApiService","systemConfigApiService"],mixins:[m.getByName("notification")],data:function(){return{repository:null,pages:null,lastSuccessSynchronizationDate:null,synchronizationSuccess:!1,synchronizationProcessing:!1,scheduleSynchronizationSuccess:!1,scheduleSynchronizationProcessing:!1,resetSynchronizationSuccess:!1,resetSynchronizationProcessing:!1}},metaInfo:function(){return{title:this.$createTitle()}},computed:{columns:function(){return this.getColumns()}},created:function(){this.createdComponent()},methods:{createdComponent:function(){var e=this;this.repository=this.repositoryFactory.create("styla_cms_page"),this.domainsRepository=this.repositoryFactory.create("sales_channel_domain");var n=new f;n.addSorting(f.sort("createdAt","ASC")),n.addFilter(f.equals("salesChannel.typeId","8a243080f92e4c719546314b577cf82b"));var t=this.domainsRepository.search(n,Shopware.Context.api);t.then((function(n){e.domainsList=n}));var a=this.systemConfigApiService.getValues("StylaCmsIntegration");a.then((function(n){e.settings=n}));var i=null,s=this.repository.search(new f,Shopware.Context.api);s.then((function(e){i=e})),Promise.all([s,a,t]).then((function(){e.pages=i})),this.stylaSynchronizationApiService.getLastSuccessSynchronizationDate().then((function(n){var t;null!=n&&null!==(t=n.data)&&void 0!==t&&t.result?e.lastSuccessSynchronizationDate=y(n.data.result,{hour:"2-digit",minute:"2-digit"}):e.lastSuccessSynchronizationDate=e.$tc("styla-cms-integration-plugin.actions.get-last-success-date.not_available")})).catch((function(n){console.error("Failed to get last success synchronization date",n),e.createNotificationError({message:e.$tc("styla-cms-integration-plugin.actions.get-last-success-date.message.failed")})}))},getColumns:function(){return[{property:"title",label:this.$tc("styla-cms-integration-plugin.page.listing.grid.column.title"),allowResize:!0,primary:!0},{property:"path",label:this.$tc("styla-cms-integration-plugin.page.listing.grid.column.path"),allowResize:!0},{property:"accountName",label:this.$tc("styla-cms-integration-plugin.page.listing.grid.column.account-name"),allowResize:!0},{property:"createdAt",label:this.$tc("styla-cms-integration-plugin.page.listing.grid.column.created-at"),allowResize:!0}]},resetSynchronizationStatus:function(){this.resetSynchronizationProcessing=!0,this.stylaSynchronizationApiService.resetSynchronizationStatus().then(function(e){this.resetSynchronizationProcessing=!1,e.data.stuck<=0?this.createNotificationSuccess({message:this.$tc("styla-cms-integration-plugin.actions.reset-synchronization.message.none")}):e.data.stuck>0&&e.data.stuck===e.data.cleared?this.createNotificationSuccess({message:this.$tc("styla-cms-integration-plugin.actions.reset-synchronization.message.success")}):e.data.stuck>0&&e.data.cleared>0&&e.data.stuck>e.data.cleared?this.createNotificationWarning({message:this.$tc("styla-cms-integration-plugin.actions.reset-synchronization.message.partial")}):this.createNotificationWarning({message:this.$tc("styla-cms-integration-plugin.actions.reset-synchronization.message.failed")})}.bind(this)).catch(function(e){this.resetSynchronizationProcessing=!1,void 0!==e.response.data.errorCode&&console.error("Failed to reset synchronization status, error code: "+e.response.data.errorCode),this.createNotificationError({message:this.$tc("styla-cms-integration-plugin.actions.reset-synchronization.message.failed")})}.bind(this))},synchronization:function(){this.synchronizationProcessing=!0,this.stylaPageApiService.doSynchronization().then(function(e){this.synchronizationProcessing=!1,e.data.isSynced?this.createNotificationSuccess({message:this.$tc("styla-cms-integration-plugin.actions.pages-synchronization.message.success")}):"SYNCHRONIZATION_IS_ALREADY_RUNNING"===e.data.errorCode?this.createNotificationWarning({message:this.$tc("styla-cms-integration-plugin.actions.pages-synchronization.message.is-running")}):this.createNotificationWarning({message:this.$tc("styla-cms-integration-plugin.actions.pages-synchronization.message.failed")})}.bind(this)).catch(function(e){this.synchronizationProcessing=!1,void 0!==e.response.data.errorCode&&console.error("Failed to sync styla pages, error code: "+e.response.data.errorCode),this.createNotificationError({message:this.$tc("styla-cms-integration-plugin.actions.pages-synchronization.message.failed")})}.bind(this))},scheduleSynchronization:function(){this.scheduleSynchronizationProcessing=!0,this.stylaPageApiService.scheduleSynchronization().then(function(e){this.scheduleSynchronizationProcessing=!1,e.data.isScheduled?this.createNotificationSuccess({message:this.$tc("styla-cms-integration-plugin.actions.schedule-pages-synchronization.message.success")}):"SYNCHRONIZATION_IS_ALREADY_RUNNING"===e.data.errorCode?this.createNotificationWarning({message:this.$tc("styla-cms-integration-plugin.actions.schedule-pages-synchronization.message.is-running")}):this.createNotificationWarning({message:this.$tc("styla-cms-integration-plugin.actions.schedule-pages-synchronization.message.was-not-scheduled")})}.bind(this)).catch(function(e){this.scheduleSynchronizationProcessing=!1,void 0!==e.response.data.errorCode&&console.error("Failed to schedule styla pages synchronization, error code: "+e.response.data.errorCode),this.createNotificationError({message:this.$tc("styla-cms-integration-plugin.actions.schedule-pages-synchronization.message.failed")})}.bind(this))},refreshPageDetails:function(e){var n=this.stylaPageApiService.refreshPageDetails(e.id);this.createNotificationInfo({message:this.$tc("styla-cms-integration-plugin.actions.refresh-page-details.message.scheduled")}),n.then(function(e){e.data.isSuccess?this.createNotificationSuccess({message:this.$tc("styla-cms-integration-plugin.actions.refresh-page-details.message.success")}):"PAGE_NOT_FOUND"===e.data.errorCode?this.createNotificationWarning({message:this.$tc("styla-cms-integration-plugin.actions.refresh-page-details.message.page-not-found")}):this.createNotificationError({message:this.$tc("styla-cms-integration-plugin.actions.refresh-page-details.failed")})}.bind(this)).catch(function(e){void 0!==e.response.data.errorCode&&console.error("Failed to refresh styla page details, error code: "+e.response.data.errorCode),this.createNotificationError({message:this.$tc("styla-cms-integration-plugin.actions.refresh-page-details.message.failed")})}.bind(this))},computePathLink:function(e){if(0===this.domainsList.length)return null;if(this.pagesPathHashMap&&this.pagesPathHashMap[e.id])return this.pagesPathHashMap[e.id];var n=null,t=this.settings["StylaCmsIntegration.settings.accountNames"];for(var a in t)if(e.accountName===t[a]&&t[a]){n=a;break}var i=null;n&&"default"!==n&&(i=this.domainsList.find((function(e){return e.languageId===n}))),i||(i=this.domainsList[0]);var s=i.url,o=this.settings["StylaCmsIntegration.settings.defaultDomainUrl"];o&&(s=o);var r=this.settings["StylaCmsIntegration.settings.domainUrls"];if(r&&n)for(var l in r)if(n==n&&r[l]){s=r[l];break}var c="".concat(e.path),u=s.replace(/\/$/,"")+"/"+c.replace(/^\//,"");return this.pagesPathHashMap||(this.pagesPathHashMap={}),this.pagesPathHashMap[e.id]=u,u},resetSynchronizationState:function(){this.synchronizationSuccess=!1,this.synchronizationProcessing=!1},resetScheduleSynchronizationState:function(){this.scheduleSynchronizationSuccess=!1,this.scheduleSynchronizationProcessing=!1},resetTheResetSynchronizationState:function(){this.resetSynchronizationSuccess=!1,this.resetSynchronizationProcessing=!1}}});Shopware.Component.register("styla-plugin-settings-icon",{template:'{% block styla_plugin_settings_icon %}\n    <span class="sw-icon">\n        <svg\n            version="1.0"\n            xmlns="http://www.w3.org/2000/svg"\n            width="84.000000pt"\n            height="84.000000pt"\n            viewBox="0 0 84.000000 84.000000"\n            preserveAspectRatio="xMidYMid meet">\n            <g transform="translate(0.000000,84.000000) scale(0.100000,-0.100000)" fill="#000000" stroke="none">\n                <path d="M280 690 l0 -30 190 0 190 0 0 30 0 30 -190 0 -190 0 0 -30z"></path>\n                <path d="M137 573 c-4 -3 -7 -19 -7 -35 l0 -28 180 0 180 0 0 35 0 35 -173 0 c-96 0 -177 -3 -180 -7z"></path>\n                <path d="M228 430 l-5 -30 194 0 193 0 0 30 0 30 -189 0 -189 0 -4 -30z"></path>\n                <path d="M340 300 l0 -30 180 0 180 0 0 30 0 30 -180 0 -180 0 0 -30z"></path>\n                <path d="M180 155 l0 -35 195 0 195 0 0 35 0 35 -195 0 -195 0 0 -35z"></path>\n            </g>\n        </svg>\n    </span>\n{% endblock %}\n'});var v=Shopware.Component,b=Shopware.Data.Criteria;v.register("styla-cms-integration-settings-accounts",{template:'{% block styla_cmsintegration_content_card_channel_config_accounts_card %}\n    <sw-card class="sw-card--grid"\n             :title="$tc(\'styla-cms-integration-plugin.configuration.group.accounts.title\')">\n\n        {% block styla_cmsintegration_content_card_channel_config_accounts_card_container %}\n            <sw-container>\n\n                {% block styla_cmsintegration_content_card_channel_config_accounts_card_container_settings %}\n                    <div v-if="actualConfigData" class="card-container">\n\n                        {% block styla_cmsintegration_content_card_channel_config_accounts_card_container_settings_default %}\n                            <div style="display: grid; grid-template-columns: 2fr 2fr; grid-column-gap: 5px">\n                                <sw-inherit-wrapper v-model="actualConfigData[\'StylaCmsIntegration.settings.defaultAccountName\']"\n                                                    :inheritedValue="selectedSalesChannelId === null ? null : allConfigs[\'null\'][\'StylaCmsIntegration.settings.defaultAccountName\']"\n                                                    :customInheritationCheckFunction="checkTextFieldInheritance">\n                                    <template #content="props">\n                                        <sw-text-field\n                                                    name="StylaCmsIntegration.settings.defaultAccountName"\n                                                    :mapInheritance="props"\n                                                    :label="$tc(\'styla-cms-integration-plugin.configuration.field.accountNames.default.label\')"\n                                                    :disabled="props.isInherited"\n                                                    :value="props.currentValue"\n                                                    :error="defaultAccountNameErrorState"\n                                                    :required="true"\n                                                    @change="props.updateCurrentValue">\n                                        </sw-text-field>\n                                    </template>\n                                </sw-inherit-wrapper>\n\n                                <sw-inherit-wrapper v-model="actualConfigData[\'StylaCmsIntegration.settings.defaultDomainUrl\']"\n                                                    :inheritedValue="selectedSalesChannelId === null ? null : allConfigs[\'null\'][\'StylaCmsIntegration.settings.defaultDomainUrl\']"\n                                                    :customInheritationCheckFunction="checkTextFieldInheritance">\n                                    <template #content="props">\n                                        <sw-single-select\n                                                    name="StylaCmsIntegration.settings.defaultDomainUrl"\n                                                    :label="$tc(\'styla-cms-integration-plugin.configuration.field.domainUrls.default.label\')"\n                                                    :disabled="props.isInherited"\n                                                    :value="props.currentValue"\n                                                    labelProperty="label"\n                                                    valueProperty="value"\n                                                    :options="salesChannelDomains"\n                                                    @change="props.updateCurrentValue">\n                                        </sw-single-select>\n                                    </template>\n                                </sw-inherit-wrapper>\n                            </div>\n                        {% endblock %}\n\n                        {% block styla_cmsintegration_content_card_channel_config_accounts_card_container_settings_language_accounts %}\n                            <template v-for="language in systemLanguages">\n                                <div style="display: grid; grid-template-columns: 2fr 2fr; grid-column-gap: 5px">\n                                    <sw-inherit-wrapper v-model="accountNames[language.id]"\n                                                        :inheritedValue="selectedSalesChannelId === null ? null : allConfigs[\'null\'][\'StylaCmsIntegration.settings.accountNames\'][language.id]"\n                                                        :customInheritationCheckFunction="checkTextFieldInheritance">\n                                        <template #content="props">\n                                            <sw-text-field\n                                                        :mapInheritance="props"\n                                                        :label="$tc(\'styla-cms-integration-plugin.configuration.field.accountNames.language_specific_account_name.label\', 0, { name: language.name })"\n                                                        :disabled="props.isInherited"\n                                                        :value="props.currentValue"\n                                                        @change="props.updateCurrentValue">\n                                            </sw-text-field>\n                                        </template>\n                                    </sw-inherit-wrapper>\n\n                                    <sw-inherit-wrapper v-model="domainUrls[language.id]"\n                                                        :inheritedValue="selectedSalesChannelId === null ? null : allConfigs[\'null\'][\'StylaCmsIntegration.settings.domainUrls\'][language.id]"\n                                                        >\n                                        <template #content="props">\n                                            <sw-single-select\n                                                        :label="$tc(\'styla-cms-integration-plugin.configuration.field.domainUrls.language_specific_domain_url.label\', 0, { name: language.name })"\n                                                        :disabled="props.isInherited"\n                                                        labelProperty="label"\n                                                        valueProperty="value"\n                                                        :options="salesChannelDomains"\n                                                        :value="props.currentValue"\n                                                        @change="props.updateCurrentValue">\n                                            </sw-single-select>\n                                        </template>\n                                    </sw-inherit-wrapper>\n                                </div>\n                            </template>\n                        {% endblock %}\n\n                    </div>\n                {% endblock %}\n            </sw-container>\n        {% endblock %}\n\n        {% block styla_cmsintegration_content_card_channel_config_accounts_card_loading %}\n            <sw-loader v-if="isLoading"></sw-loader>\n        {% endblock %}\n\n    </sw-card>\n{% endblock %}\n',inject:["repositoryFactory"],props:{actualConfigData:{type:Object,required:!0},allConfigs:{type:Object,required:!0},selectedSalesChannelId:{type:String,required:!1,default:null},defaultAccountNameErrorState:{type:Object,required:!1,default:null},defaultAccountNameFilled:{type:Boolean,required:!0},salesChannelDomains:{type:Object,required:!0,default:{}}},data:function(){return{configAccountName:"StylaCmsIntegration.settings.accountNames",configDomainUrl:"StylaCmsIntegration.settings.domainUrls",isLoading:!1,systemLanguages:[]}},created:function(){this.createdComponent()},computed:{languageRepository:function(){return this.repositoryFactory.create("language")},accountNames:{get:function(){return this.allConfigs[this.selectedSalesChannelId][this.configAccountName]||{}}},domainUrls:{get:function(){return this.allConfigs[this.selectedSalesChannelId][this.configDomainUrl]||{}}}},methods:{createdComponent:function(){var e=this;this.isLoading=!0;var n=new b;n.addSorting(b.sort("createdAt","ASC")),this.languageRepository.search(n,Shopware.Context.api).then((function(n){e.systemLanguages=n,e.initLanguageConfig()})).finally((function(){e.isLoading=!1}))},initLanguageConfig:function(){(void 0===this.allConfigs[this.selectedSalesChannelId][this.configAccountName]||Array.isArray(this.allConfigs[this.selectedSalesChannelId][this.configAccountName]))&&this.$set(this.allConfigs[this.selectedSalesChannelId],this.configAccountName,{}),(void 0===this.allConfigs[this.selectedSalesChannelId][this.configDomainUrl]||Array.isArray(this.allConfigs[this.selectedSalesChannelId][this.configDomainUrl]))&&this.$set(this.allConfigs[this.selectedSalesChannelId],this.configDomainUrl,{})},checkTextFieldInheritance:function(e){return"string"!=typeof e||e.length<=0}}});function S(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var a,i,s,o,r=[],l=!0,c=!1;try{if(s=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;l=!1}else for(;!(l=(a=s.call(t)).done)&&(r.push(a.value),r.length!==n);l=!0);}catch(e){c=!0,i=e}finally{try{if(!l&&null!=t.return&&(o=t.return(),Object(o)!==o))return}finally{if(c)throw i}}return r}}(e,n)||function(e,n){if(!e)return;if("string"==typeof e)return _(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);"Object"===t&&e.constructor&&(t=e.constructor.name);if("Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return _(e,n)}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,a=new Array(n);t<n;t++)a[t]=e[t];return a}Shopware.Component.register("styla-cms-integration-settings-general",{template:'{% block styla_cmsintegration_content_card_channel_config_accounts_card %}\n    <sw-card class="sw-card--grid"\n             :title="$tc(\'styla-cms-integration-plugin.configuration.group.general.title\')">\n\n        {% block styla_cmsintegration_content_card_channel_config_accounts_card_container %}\n            <sw-container>\n\n                {% block styla_cmsintegration_content_card_channel_config_accounts_card_container_settings %}\n                    <div v-if="actualConfigData" class="card-container">\n\n                        {% block styla_cmsintegration_content_card_channel_config_pages %}\n                            <sw-inherit-wrapper v-model="actualConfigData[\'StylaCmsIntegration.settings.extraPagesAllowedToOverride\']"\n                                                :inheritedValue="selectedSalesChannelId === null ? null : allConfigs[\'null\'][\'StylaCmsIntegration.settings.extraPagesAllowedToOverride\']"\n                                                :customInheritationCheckFunction="checkTextFieldInheritance">\n                                <template #content="props">\n                                    <sw-textarea-field name="StylaCmsIntegration.settings.extraPagesAllowedToOverride"\n                                                       :mapInheritance="props"\n                                                       :label="$tc(\'styla-cms-integration-plugin.configuration.field.extraPages.label\')"\n                                                       :helpText="$tc(\'styla-cms-integration-plugin.configuration.field.extraPages.helpText\')"\n                                                       :disabled="props.isInherited"\n                                                       :value="props.currentValue"\n                                                       @change="props.updateCurrentValue">\n                                    </sw-textarea-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                        {% endblock %}\n                        {% block styla_cmsintegration_content_card_channel_config_interval %}\n                            <sw-inherit-wrapper v-model="actualConfigData[\'StylaCmsIntegration.settings.pagesListSynchronizationInterval\']"\n                                                :inheritedValue="selectedSalesChannelId === null ? null : allConfigs[\'null\'][\'StylaCmsIntegration.settings.pagesListSynchronizationInterval\']">\n                                <template #content="props">\n                                    <sw-field name="StylaCmsIntegration.settings.pagesListSynchronizationInterval"\n                                              type="number"\n                                              number-type="int"\n                                              :min="1"\n                                              :mapInheritance="props"\n                                              :label="$tc(\'styla-cms-integration-plugin.configuration.field.syncInterval.label\')"\n                                              :helpText="$tc(\'styla-cms-integration-plugin.configuration.field.syncInterval.helpText\')"\n                                              :disabled="props.isInherited"\n                                              :value="props.currentValue"\n                                              :required="true"\n                                              @change="props.updateCurrentValue">\n                                    </sw-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                        {% endblock %}\n                        {% block styla_cmsintegration_content_card_channel_config_cache_lifetime %}\n                            <sw-inherit-wrapper v-model="actualConfigData[\'StylaCmsIntegration.settings.pageCacheDuration\']"\n                                                :inheritedValue="selectedSalesChannelId === null ? null : allConfigs[\'null\'][\'StylaCmsIntegration.settings.pageCacheDuration\']">\n                                <template #content="props">\n                                    <sw-field name="StylaCmsIntegration.settings.pageCacheDuration"\n                                              type="number"\n                                              number-type="int"\n                                              :min="1"\n                                              :mapInheritance="props"\n                                              :label="$tc(\'styla-cms-integration-plugin.configuration.field.pageCache.label\')"\n                                              :helpText="$tc(\'styla-cms-integration-plugin.configuration.field.pageCache.helpText\')"\n                                              :disabled="props.isInherited"\n                                              :value="props.currentValue"\n                                              :required="true"\n                                              @change="props.updateCurrentValue">\n                                    </sw-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                        {% endblock %}\n\n                    </div>\n                {% endblock %}\n            </sw-container>\n        {% endblock %}\n\n    </sw-card>\n{% endblock %}\n',props:{actualConfigData:{type:Object,required:!0},allConfigs:{type:Object,required:!0},selectedSalesChannelId:{type:String,required:!1,default:null}},created:function(){this.createdComponent()},methods:{createdComponent:function(){for(var e="StylaCmsIntegration.settings.",n=0,t=Object.entries({pagesListSynchronizationInterval:10,pageCacheDuration:3600});n<t.length;n++){var a=S(t[n],2),i=a[0],s=a[1];void 0===this.allConfigs.null[e+i]&&this.$set(this.allConfigs.null,e+i,s)}},checkTextFieldInheritance:function(e){return"string"!=typeof e||e.length<=0}}});var C=t("FpVO");Shopware.Module.register("styla-cms-integration",{type:"plugin",name:"styla-cms-integration",title:"styla-cms-integration-plugin.configuration.label",description:"styla-cms-integration-plugin.page.listing.description",color:"#ffd53d",icon:"regular-cog",snippets:{"en-GB":C},routes:{settings:{component:"styla-cms-integration-settings",path:"settings",meta:{parentPath:"sw.settings.index.plugins"}},"pages-list":{component:"styla-cms-integration-page-listing",path:"styla/page"}},navigation:[{id:"styla-cms-integration-general",label:"styla-cms-integration-plugin.menu.title",color:"#ffd53d",icon:"regular-cog",parent:"sw-content",position:100},{label:"styla-cms-integration-plugin.page.listing.title",color:"#77ff3d",icon:"solid-grip-lines",path:"styla.cms.integration.pages-list",parent:"styla-cms-integration-general",position:100}],settingsItem:{group:"plugins",to:"styla.cms.integration.settings",iconComponent:"styla-plugin-settings-icon",backgroundEnabled:!0}});var w,k=(w=t("+RN2")).keys().reduce((function(e,n){var t={name:n.split(".")[1].split("/")[1],functional:!0,render:function(e,t){var a=t.data;return e("span",{class:[a.staticClass,a.class],style:a.style,attrs:a.attrs,on:a.on,domProps:{innerHTML:w(n)}})}};return e.push(t),e}),[]),z=Shopware.Component;k.map((function(e){return z.register(e.name,e)}));function I(e){return(I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function P(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,(i=a.key,s=void 0,s=function(e,n){if("object"!==I(e)||null===e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var a=t.call(e,n||"default");if("object"!==I(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===n?String:Number)(e)}(i,"string"),"symbol"===I(s)?s:String(s)),a)}var i,s}var x=function(){function e(n,t){!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e),this.httpClient=n,this.loginService=t,this.name="stylaPageApiService"}var n,t,a;return n=e,(t=[{key:"doSynchronization",value:function(){var e=this.getHeaders();return this.httpClient.post("/styla/page/_action/synchronize-pages",{},{headers:e})}},{key:"scheduleSynchronization",value:function(){var e=this.getHeaders();return this.httpClient.post("/styla/page/_action/schedule-pages-synchronization",{},{headers:e})}},{key:"refreshPageDetails",value:function(e){var n=this.getHeaders();return this.httpClient.post("/styla/page/_action/refresh-details/"+e,{},{headers:n})}},{key:"getHeaders",value:function(){return{Accept:"application/json",Authorization:"Bearer ".concat(this.loginService.getToken()),"Content-Type":"application/json"}}}])&&P(n.prototype,t),a&&P(n,a),Object.defineProperty(n,"prototype",{writable:!1}),e}();function N(e){return(N="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function A(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,(i=a.key,s=void 0,s=function(e,n){if("object"!==N(e)||null===e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var a=t.call(e,n||"default");if("object"!==N(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===n?String:Number)(e)}(i,"string"),"symbol"===N(s)?s:String(s)),a)}var i,s}Shopware.Service().register("stylaPageApiService",(function(e){var n=Shopware.Application.getContainer("init");return new x(n.httpClient,e.loginService)}));var D=function(){function e(n,t){!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e),this.httpClient=n,this.loginService=t,this.name="stylaPageApiService"}var n,t,a;return n=e,(t=[{key:"getLastSuccessSynchronizationDate",value:function(){var e=this.getHeaders();return this.httpClient.get("/styla/synchronization/page/_action/get_last_success_date_time",{},{headers:e})}},{key:"resetSynchronizationStatus",value:function(){var e=this.getHeaders();return this.httpClient.get("/styla/synchronization/page/_action/reset_synchronization_status",{},{headers:e})}},{key:"getHeaders",value:function(){return{Accept:"application/json",Authorization:"Bearer ".concat(this.loginService.getToken()),"Content-Type":"application/json"}}}])&&A(n.prototype,t),a&&A(n,a),Object.defineProperty(n,"prototype",{writable:!1}),e}();Shopware.Service().register("stylaSynchronizationApiService",(function(e){var n=Shopware.Application.getContainer("init");return new D(n.httpClient,e.loginService)}))},FpVO:function(e){e.exports=JSON.parse('{"styla-cms-integration-plugin":{"configuration":{"label":"Styla CMS Integration","header":"Styla CMS Integration plugin Settings","group":{"general":{"title":"General Settings"},"accounts":{"title":"Account Settings"}},"field":{"accountNames":{"default":{"label":"Default account name","error":{"empty":"Default account name is required"}},"language_specific_account_name":{"label":"{name} account name"}},"domainUrls":{"default":{"label":"Override default domain URL","error":{"invalid":"Invalid domain URL format"}},"language_specific_domain_url":{"label":"Override {name} domain URL"},"no_override":"No override"},"extraPages":{"label":"List of Shopware paths the plugin can override","helpText":"The plugin per default can only take over the home page and category pages\' paths.\\nIf you publish pages with matching paths (blank path for the home page) in Styla Editor then the plugin will display the Styla content on these Shopware paths.\\nIf you want to achieve this for other Shopware paths (like a PDP) then you need to add it on the list below, each one in a new row.\\nExamples:\\n/foo-example-path/\\n/foo-example-path/bar-example-path/"},"syncInterval":{"label":"Interval of the pages list synchronization (in minutes)","helpText":"This setting defines how often the plugin checks Styla API for page updates. You can see these updates in the Content > Styla CMS > Styla Pages tab. The lower the value the more Shopware resources will be used. The minimum value is 1 minute. The default is 10 minutes."},"pageCache":{"label":"Page details cache lifetime (in seconds)","helpText":"This setting defines for how long Shopware caches Styla page content. The lower the value the more Shopware resources will be used. The minimum value is 1 second. The default is 3600 seconds (one hour)."},"overrideDomainUrl":{"label":"Override domain url","helpText":"This setting overrides the automatic domain url selection."}}},"blocks":{"module-content":{"label":"Styla Modular Content"}},"element":{"module-content":{"text":"Styla Modular Content, id: \\"{id}\\"","label":"Styla Modular Content","configuration":{"slot-id":{"label":"Slot Id (assigned at https://editor.styla.com/)"}}}},"page":{"listing":{"title":"Styla Pages","description":"List of Styla Pages","grid":{"column":{"title":"Page title","path":"Page path","account-name":"Account name","created-at":"Created at"}}}},"actions":{"schedule-pages-synchronization":{"button":{"label":"Schedule Pages Sync"},"message":{"success":"Pages synchronization scheduled","failed":"Failed to schedule pages synchronization","is-running":"Pages synchronization was not scheduled because another synchronization is already running","was-not-scheduled":"Pages synchronization was not scheduled"}},"pages-synchronization":{"button":{"label":"Synchronize Now"},"message":{"success":"Pages synchronization succeed","failed":"Failed to sync pages","is-running":"Pages synchronization was not run because another synchronization is already running"}},"refresh-page-details":{"button":{"label":"Refresh page details"},"message":{"success":"Page details refreshed","failed":"Failed to refresh page details","page-not-found":"Page with such name was not found. Please schedule pages synchronization (button above)","scheduled":"Page details refresh scheduled"}},"get-last-success-date":{"not_available":"N/A","text":"Last successful synchronization: \\"{dateTime}\\"","message":{"failed":"Failed to fetch last successful synchronization date"}},"reset-synchronization":{"button":{"label":"Reset sync status"},"message":{"none":"No stuck synchronization processes","success":"Synchronization status reset successfully","partial":"Some synchronization processes cleared","failed":"Synchronization status reset failed"}}},"menu":{"title":"Styla CMS"}}}')},P8hj:function(e,n,t){"use strict";function a(e,n){for(var t=[],a={},i=0;i<n.length;i++){var s=n[i],o=s[0],r={id:e+":"+i,css:s[1],media:s[2],sourceMap:s[3]};a[o]?a[o].parts.push(r):t.push(a[o]={id:o,parts:[r]})}return t}t.r(n),t.d(n,"default",(function(){return h}));var i="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!i)throw new Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var s={},o=i&&(document.head||document.getElementsByTagName("head")[0]),r=null,l=0,c=!1,u=function(){},d=null,g="data-vue-ssr-id",p="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function h(e,n,t,i){c=t,d=i||{};var o=a(e,n);return m(o),function(n){for(var t=[],i=0;i<o.length;i++){var r=o[i];(l=s[r.id]).refs--,t.push(l)}n?m(o=a(e,n)):o=[];for(i=0;i<t.length;i++){var l;if(0===(l=t[i]).refs){for(var c=0;c<l.parts.length;c++)l.parts[c]();delete s[l.id]}}}}function m(e){for(var n=0;n<e.length;n++){var t=e[n],a=s[t.id];if(a){a.refs++;for(var i=0;i<a.parts.length;i++)a.parts[i](t.parts[i]);for(;i<t.parts.length;i++)a.parts.push(y(t.parts[i]));a.parts.length>t.parts.length&&(a.parts.length=t.parts.length)}else{var o=[];for(i=0;i<t.parts.length;i++)o.push(y(t.parts[i]));s[t.id]={id:t.id,refs:1,parts:o}}}}function f(){var e=document.createElement("style");return e.type="text/css",o.appendChild(e),e}function y(e){var n,t,a=document.querySelector("style["+g+'~="'+e.id+'"]');if(a){if(c)return u;a.parentNode.removeChild(a)}if(p){var i=l++;a=r||(r=f()),n=S.bind(null,a,i,!1),t=S.bind(null,a,i,!0)}else a=f(),n=_.bind(null,a),t=function(){a.parentNode.removeChild(a)};return n(e),function(a){if(a){if(a.css===e.css&&a.media===e.media&&a.sourceMap===e.sourceMap)return;n(e=a)}else t()}}var v,b=(v=[],function(e,n){return v[e]=n,v.filter(Boolean).join("\n")});function S(e,n,t,a){var i=t?"":a.css;if(e.styleSheet)e.styleSheet.cssText=b(n,i);else{var s=document.createTextNode(i),o=e.childNodes;o[n]&&e.removeChild(o[n]),o.length?e.insertBefore(s,o[n]):e.appendChild(s)}}function _(e,n){var t=n.css,a=n.media,i=n.sourceMap;if(a&&e.setAttribute("media",a),d.ssrId&&e.setAttribute(g,n.id),i&&(t+="\n/*# sourceURL="+i.sources[0]+" */",t+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(i))))+" */"),e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}},PKhk:function(e,n,t){},TsUz:function(e,n,t){},Ul5W:function(e,n,t){var a=t("9/SF");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,t("P8hj").default)("f9058b3c",a,!0,{})},Zk0C:function(e,n){e.exports='<svg version="1.0" xmlns="http://www.w3.org/2000/svg" width="84.000000pt" height="84.000000pt" viewBox="0 0 84.000000 84.000000" preserveAspectRatio="xMidYMid meet"><g transform="translate(0.000000,84.000000) scale(0.100000,-0.100000)" fill="#000000" stroke="none"><path d="M280 690 l0 -30 190 0 190 0 0 30 0 30 -190 0 -190 0 0 -30z"></path><path d="M137 573 c-4 -3 -7 -19 -7 -35 l0 -28 180 0 180 0 0 35 0 35 -173 0 c-96 0 -177 -3 -180 -7z"></path><path d="M228 430 l-5 -30 194 0 193 0 0 30 0 30 -189 0 -189 0 -4 -30z"></path><path d="M340 300 l0 -30 180 0 180 0 0 30 0 30 -180 0 -180 0 0 -30z"></path><path d="M180 155 l0 -35 195 0 195 0 0 35 0 35 -195 0 -195 0 0 -35z"></path></g></svg>'},bLrB:function(e,n,t){},dhj1:function(e,n,t){var a=t("bLrB");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,t("P8hj").default)("19063248",a,!0,{})},rhw7:function(e,n,t){var a=t("simn");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,t("P8hj").default)("3b176780",a,!0,{})},simn:function(e,n,t){}});
//# sourceMappingURL=styla-cms-integration.js.map